前端框架：JQuery，Velocity，AngularJS，React.js，Vue.js，Node.js

后端框架：SpringMVC，Spring MyBatis （以前用struts2，后因OpenSSL等各种漏洞，用得少了）

日志框架：Log4j(具体的日志实现方案)、Log4j2(不兼容log4j1)、Commons Logging(日志门面)、SLF4J(日志门面)、Logback(具体的日志实现方案,必须配合SLF4J使用,性能更好，内存开销更小)、JUL(Java Util Logging)

数据库：MySQL（分库、分表，及主从备份、双机热备、纵向扩展、横向扩展），Oracle，h2(嵌入式DB)

非关系型数据库（Nosql）：Redis，Memcached，Cassandra、Mongodb、CouchDB（基于分布式文件存储的数据库）、Riak、Membase、Neo4j 和 HBase

通信（RPC）：Spring Cloud，Dubbo，Hasor-RSF，WebService(cxf的soap、restful协议)，RMI，Hessian，Burlap，Httpinvoker

消息（Message）：Apache ActiveMQ（是JMS1.1标准的实现，支持OpenWire、STOMP、REST、XMPP、AMQP等消息服务协议，支持广泛的传输协议:例如Http(s)、in-vm、TCP、UDP、SSL、NIO、多播、JGroups和JXTA），Joram（JMS），Jboss HornetQ（JMS），OpenAMQ（AMQP），OpenMQ（也称OpenJMS，JMS），MuleMQ（JMS），SonicMQ（JMS），RabbitMQ（AMQP），ZeroMQ（TCP、UDP）,阿里的MQ

异步并行框架：TBSchedule

worker：Quartz

工作流：Activity

搜索引擎：Lucene，基于lucene封装的solr

集群技术：Hadoop

服务监控：CAT（Central Application Tracking，大众点评推出的基于纯Java开发的分布式实时监控系统）

分布式配置管理：disconf（百度的），Diamond（淘宝的），QConf （360的）

日志系统：ELK、FaceBook的Scribe，Apache的Chukwa，LinkedIn的Kafka和 Cloudera的Flume

容器管理系统/平台：Kubernetes(k8s)、Apache Mesos、Docker Swarm、Hypernetes(容器云服务)、Harbor(开源企业级容器Registry服务器)、Open DC/OS(出现之前，Docker 的统一管理工具只有Kubernetes)

应用容器引擎：Docker、HyperContainer、runV(虚拟化容器运行时引擎实现)、Docker的runC(虚拟化容器运行时引擎实现)




备注：
MQ 是生产者消费者模式。
RPC 是请求响应模式。
MQ 是面向数据的。
RPC 是面向动作的。

protocol buffer 只是一个序列化方式，并不是 RPC。