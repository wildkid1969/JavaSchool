java关键字

概述

abstract
	

assert
	

boolean
	

break
	

byte

case
	

catch
	

char
	

class
	

continue

default
	

do
	

double
	

else
	

enum

extends
	

final
	

finally
	

float
	

for

if
	

implements
	

import
	

instanceof
	

int

interface
	

long
	

native
	

new
	

package

private
	

protected
	

public
	

return
	

strictfp

short
	

static
	

super
	

switch
	

synchronized 

this
	

throw
	

throws
	

transient
	

try

void
	

volatile
	

while
	


	


注：红色字体关键字不常用，达内课程将不涉及到

关键字

关键字是电脑语言里事先定义的,有特别意义的标识符,有时又叫保留字，还有特别意义的变量。

Java的关键字对java的编译器有特殊的意义，他们用来表示一种数据类型，或者表示程序的结构等，关键字不能用作变量名、方法名、类名、包名。

abstract

一个Java语言中的关键字，用在类的声明中来指明一个类是不能被实例化的，但是可以被其它类继承。一个抽象类可以使用抽象方法，抽象方法不需要实现，但是需要在子类中被实现。

break

一个Java的关键字，用来改变程序执行流程，立刻从当前语句的下一句开始执行。如果后面跟有一个标签，则从标签对应的地方开始执行。用来中断程序的执行，一般用在循环语句中，用来跳出本层循环，转去执行下面的程序。

case

Java语言的关键字，用来定义一组分支选择，如果某个值和switch中给出的值一样，就会从该分支开始执行。

catch

Java的一个关键字，用来声明当try语句块中发生运行时错误或非运行时异常时运行的一个块。

char

Java语言的一个关键字，用来定义一个字符类型。

int

Java语言的一个关键字，用来定义一个整型类型数据或变量。

for

Java语言的一个关键字，是循环结构中经常使用的一个关键字，其形式为：

for（表达式1；表达式2；表达式3）

{

}

其中表达式1用于给相应的变量赋值，表达式2是条件判断语句，表达式3循环控制语句。

if

Java语言的一个关键字，是用来判断条件用的。

编辑本段§详细介绍

类和接口

abstract标记为抽象或包含在抽象类中的成员必须通过从抽象类派生的类来实现。

class类，

格式为：

class类名 extends父类名称{

属性声明及初始化；方法声明及方法体；

}

implements实现

import导入

interface接口。

格式为：

interface接口名 [extends 父接口列表]{

[public][static][final]属性类型属性名=常量值；

[public][abstract]返回值类型方法名（参数列表）；

}

package打包，声明仅仅指定了文件中所定义的类属于哪一个包。

static静态属性，用来描述一个类下所有对象共享的属性。

throws扔，一个方法中发生异常但没有捕获，在方法头声明，由方法调用者处理。//throw后不允许有其他的语句。

void空

数据类型

boolean值只能是true和false，而不能用0和1代替，并且一定要小写。

byte字节型

char字符型

double双精度浮点型

float单精度浮点型

int整型

long长整型

short短整型

流程控制

break中断switch语句的执行，在循环语句中，同样也是结束循环语句的执行。

continue只跳出本次循环，还要继续执行下一次的循环。break完全跳出所在或者是所标记的循环。　

do 和while连用，

格式为：

do{

循环体；

}while（循环条件）；//不要忘记分号；

for

格式为：

for（表达式1；表达式2；表达式3）{

循环体;}

final如果不希望某个类被其他的类继承，在这种情况下需要使用修饰符final来说明一个类是终极的，不能够做父类。

if

格式为：

if（条件表达式）

{功能代码块1}

else

{功能代码块}//条件表达式返回值为真，则执行功能块，否则执行else功能块。

return

switch

格式为：

switch（表达式）{

case值1：

功能代码1；

[break;]

case值2：

功能代码2；

[break;]；

……

case值n：

功能代码n；

[break;]

default：功能代码others；}

while

格式为：

while（循环条件）

{循环体;}

访问范围

private 私有地，Private 语句在模块级别中使用，用于声明私有变量及分配存储空间。

默认访问控制(package ),如果在成员变量和方法前不加任何访问权限修饰符，则称为默认访问控制，也称为包访问控制。这意味着同一包内的其他所有类都能访问该成员，但对包外的所有类就不能访问。

protected 表明被它修饰的成员变量为保护类型，在同一个包里和 public 类型是一样的，也是能够访问到的。但是如果在不同包里的 protected 类型的成员变量就只能通过子类来访问，这个修饰符是区别于其他的修饰符的。

public 公共的，他表示某个变量或者函数是全局函数，例如:public int a 表示a这个整型变量是全局变量。

类的实例

new该子句创建一个新的对象实例。New 子句必须指定一个可以用来创建实例的已定义类。可以在声明语句或赋值语句中使用 New。执行该语句时，它将调用指定类的构造函数，传递提供的所有参数。　

this引用属性，当方法中的参数和某个属性有相同的名字时，这是局部变量优先，属性被隐藏。然而，有时为了能够在方法中以用隐藏的属性，就可以用this区分，由this引用的就是属性，没有this引用的则是局部变量或者是参数。

super被继承的类称为超类，继承的类称为子类。

其它

1、catch捕获错误的语句。

2、finally为了完成执行的代码而设计的，主要是为了程序的健壮性和完整性，无论有没有异常发生都执行代码。

3、native是方法修饰符。Native方法是由另外一种语言（如c/c++，FORTRAN，汇编）实现的本地方法。因为在外部实现了方法，所以在java代码中，就不需要声明了，有点类似于接口方法。Native可以和其他一些修饰符连用，但是abstract方法和Interface方法不能用native来修饰。

4、strictfp修饰类和方法，意思是FP-strict，精确浮点，符合IEEE-754规范的。当一个class或interface用strictfp声明，内部所有的float和double表达式都会成为strictfp的。Interface method不能被声明为strictfp的，class的可以。

5、try当try子句中的某行代码发生异常，会终止程序的运行，跳转到catch子句来执行。

6、transient变量修饰符。标记为transient的变量，在对象存储时，这些变量状态不会被持久化。当对象序列化的保存在存储器上时，不希望有些字段数据被保存，为了保证安全性，可以把这些字段声明为transient。

7、volatilevolatile修饰变量。在每次被线程访问时，都强迫从共享内存中重读该成员变量的值。而且，当成员变量发生变化时，强迫线程将变化值回写到共享内存。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。

8、gotojava中关键字表中虽然有goto关键字但是在声明变量时是不可以使用该单词的因为goto 是 Java 中一个没有使用的关键字，如果想叫做保留字也可以。

一般结构化程序，都不需要使用 Goto 语句的，在有分支和循环以及递归调用之后，goto 完全可以不使用了。为了程序代码更简捷，对于循环结构，还有 break 和 continue 用于跳转。而且，break 和 continue 都可以带标签，更增加了它们的灵活性。

编辑本段§Java与Internet

我们知道，早先的www仅可以传送文本和图片，Java的出现实现了互动的页面，是一次伟大的革命。

Java并不是为Internet、www而设计的，它也可以用来编写独立的应用程序。Java是一种面向对象语言，Java语言类似于C++语言，所以已熟练掌握C++语言的编程人员，再学习Java语言就容易得多！Java程序需要编译，它被放置在Internet服务器上，当用户访问服务器时，Java程序被下载到本地的用户机上，由浏览器解释运行。实际上有两种Java程序：一种Java应用程序是一个完整的程序，如Web浏览器。另一种Java小应用程序是运行于Web浏览器中的一个程序。 